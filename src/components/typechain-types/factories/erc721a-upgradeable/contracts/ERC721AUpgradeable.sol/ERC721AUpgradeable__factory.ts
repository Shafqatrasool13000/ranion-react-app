/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721AUpgradeable,
  ERC721AUpgradeableInterface,
} from "../../../../erc721a-upgradeable/contracts/ERC721AUpgradeable.sol/ERC721AUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119d4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906114f3565b6102f5565b60405161011691906116c9565b60405180910390f35b610127610387565b60405161013491906116e4565b60405180910390f35b61015760048036038101906101529190611545565b610422565b6040516101649190611662565b60405180910390f35b610187600480360381019061018291906114b7565b6104aa565b005b6101916105f7565b60405161019e9190611706565b60405180910390f35b6101c160048036038101906101bc91906113b1565b610620565b005b6101dd60048036038101906101d891906113b1565b61097b565b005b6101f960048036038101906101f49190611545565b61099b565b6040516102069190611662565b60405180910390f35b6102296004803603810190610224919061134c565b6109ad565b6040516102369190611706565b60405180910390f35b610247610a6f565b60405161025491906116e4565b60405180910390f35b6102776004803603810190610272919061147b565b610b0a565b005b610293600480360381019061028e9190611400565b610c8b565b005b6102af60048036038101906102aa9190611545565b610cfe565b6040516102bc91906116e4565b60405180910390f35b6102df60048036038101906102da9190611375565b610d9d565b6040516102ec91906116c9565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060610391610e3a565b600201805461039f90611870565b80601f01602080910402602001604051908101604052809291908181526020018280546103cb90611870565b80156104185780601f106103ed57610100808354040283529160200191610418565b820191906000526020600020905b8154815290600101906020018083116103fb57829003601f168201915b5050505050905090565b600061042d82610e67565b610463576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046b610e3a565b600601600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104b58261099b565b90508073ffffffffffffffffffffffffffffffffffffffff166104d6610ed8565b73ffffffffffffffffffffffffffffffffffffffff161461053957610502816104fd610ed8565b610d9d565b610538576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b82610542610e3a565b600601600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610601610ee0565b610609610e3a565b60010154610615610e3a565b600001540303905090565b600061062b82610ee5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610692576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061069e84610fce565b915091506106b481876106af610ed8565b610ffe565b610700576106c9866106c4610ed8565b610d9d565b6106ff576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161415610767576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107748686866001611042565b801561077f57600082555b610787610e3a565b60050160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460019003919050819055506107de610e3a565b60050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001019190508190555061085f8561083b888887611048565b7c020000000000000000000000000000000000000000000000000000000017611070565b610867610e3a565b60040160008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561090b57600060018501905060006108b9610e3a565b6004016000838152602001908152602001600020541415610909576108dc610e3a565b60000154811461090857836108ef610e3a565b6004016000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610973868686600161109b565b505050505050565b61099683838360405180602001604052806000815250610c8b565b505050565b60006109a682610ee5565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a15576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff610a26610e3a565b60050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060610a79610e3a565b6003018054610a8790611870565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab390611870565b8015610b005780601f10610ad557610100808354040283529160200191610b00565b820191906000526020600020905b815481529060010190602001808311610ae357829003601f168201915b5050505050905090565b610b12610ed8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b77576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80610b80610e3a565b6007016000610b8d610ed8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610c3a610ed8565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c7f91906116c9565b60405180910390a35050565b610c96848484610620565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610cf857610cc1848484846110a1565b610cf7576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610d0982610e67565b610d3f576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610d49611201565b9050600081511415610d6a5760405180602001604052806000815250610d95565b80610d7484611218565b604051602001610d8592919061163e565b6040516020818303038152906040525b915050919050565b6000610da7610e3a565b60070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000807f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090508091505090565b600081610e72610ee0565b11158015610e8a5750610e83610e3a565b6000015482105b8015610ed1575060007c0100000000000000000000000000000000000000000000000000000000610eb9610e3a565b60040160008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610ef4610ee0565b11610f9757610f01610e3a565b60000154811015610f96576000610f16610e3a565b600401600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610f94575b6000811415610f8a57610f67610e3a565b600401600083600190039350838152602001908152602001600020549050610f56565b8092505050610fc9565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000806000610fdb610e3a565b600601600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e861105f868684611272565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a026110c7610ed8565b8786866040518563ffffffff1660e01b81526004016110e9949392919061167d565b602060405180830381600087803b15801561110357600080fd5b505af192505050801561113457506040513d601f19601f82011682018060405250810190611131919061151c565b60015b6111ae573d8060008114611164576040519150601f19603f3d011682016040523d82523d6000602084013e611169565b606091505b506000815114156111a6576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561125e57600183039250600a81066030018353600a8104905061123e565b508181036020830392508083525050919050565b60009392505050565b600061128e61128984611746565b611721565b9050828152602081018484840111156112a657600080fd5b6112b184828561182e565b509392505050565b6000813590506112c881611942565b92915050565b6000813590506112dd81611959565b92915050565b6000813590506112f281611970565b92915050565b60008151905061130781611970565b92915050565b600082601f83011261131e57600080fd5b813561132e84826020860161127b565b91505092915050565b60008135905061134681611987565b92915050565b60006020828403121561135e57600080fd5b600061136c848285016112b9565b91505092915050565b6000806040838503121561138857600080fd5b6000611396858286016112b9565b92505060206113a7858286016112b9565b9150509250929050565b6000806000606084860312156113c657600080fd5b60006113d4868287016112b9565b93505060206113e5868287016112b9565b92505060406113f686828701611337565b9150509250925092565b6000806000806080858703121561141657600080fd5b6000611424878288016112b9565b9450506020611435878288016112b9565b935050604061144687828801611337565b925050606085013567ffffffffffffffff81111561146357600080fd5b61146f8782880161130d565b91505092959194509250565b6000806040838503121561148e57600080fd5b600061149c858286016112b9565b92505060206114ad858286016112ce565b9150509250929050565b600080604083850312156114ca57600080fd5b60006114d8858286016112b9565b92505060206114e985828601611337565b9150509250929050565b60006020828403121561150557600080fd5b6000611513848285016112e3565b91505092915050565b60006020828403121561152e57600080fd5b600061153c848285016112f8565b91505092915050565b60006020828403121561155757600080fd5b600061156584828501611337565b91505092915050565b611577816117ba565b82525050565b611586816117cc565b82525050565b600061159782611777565b6115a1818561178d565b93506115b181856020860161183d565b6115ba81611931565b840191505092915050565b60006115d082611782565b6115da818561179e565b93506115ea81856020860161183d565b6115f381611931565b840191505092915050565b600061160982611782565b61161381856117af565b935061162381856020860161183d565b80840191505092915050565b61163881611824565b82525050565b600061164a82856115fe565b915061165682846115fe565b91508190509392505050565b6000602082019050611677600083018461156e565b92915050565b6000608082019050611692600083018761156e565b61169f602083018661156e565b6116ac604083018561162f565b81810360608301526116be818461158c565b905095945050505050565b60006020820190506116de600083018461157d565b92915050565b600060208201905081810360008301526116fe81846115c5565b905092915050565b600060208201905061171b600083018461162f565b92915050565b600061172b61173c565b905061173782826118a2565b919050565b6000604051905090565b600067ffffffffffffffff82111561176157611760611902565b5b61176a82611931565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006117c582611804565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561185b578082015181840152602081019050611840565b8381111561186a576000848401525b50505050565b6000600282049050600182168061188857607f821691505b6020821081141561189c5761189b6118d3565b5b50919050565b6118ab82611931565b810181811067ffffffffffffffff821117156118ca576118c9611902565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61194b816117ba565b811461195657600080fd5b50565b611962816117cc565b811461196d57600080fd5b50565b611979816117d8565b811461198457600080fd5b50565b61199081611824565b811461199b57600080fd5b5056fea264697066735822122058b77183759fd109b4bde51326c9e1c9500706278518c58e71edd2b3dd08922a64736f6c63430008040033";

type ERC721AUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721AUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC721AUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721AUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721AUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721AUpgradeable {
    return super.attach(address) as ERC721AUpgradeable;
  }
  override connect(signer: Signer): ERC721AUpgradeable__factory {
    return super.connect(signer) as ERC721AUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AUpgradeableInterface {
    return new utils.Interface(_abi) as ERC721AUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721AUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC721AUpgradeable;
  }
}
